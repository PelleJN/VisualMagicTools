#! C:/Program Files/Nuke15.0v1/nuke-15.0.1.dll -nx
version 15.0 v1
Gizmo {
 onCreate "n = nuke.thisNode()\nw = n.format().width()/2\nh = n.format().height()/2\n\ncenter = \[w,h]    \n\nif n.knob('create').value()==False:\n    n.knob('lightpos').setValue(center)\n    n.knob('create').setValue(1)\n"
 inputs 3
 tile_color 0x55bfffff
 addUserKnob {20 User}
 addUserKnob {41 lightpos l "Light Position" T DISTANCE.lightpos}
 addUserKnob {6 customnormals l "Use Custom Normals" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {20 grp_centertrim l "Mask Edits" n 1}
 grp_centertrim 0
 addUserKnob {7 soften l Soften R 0 10}
 soften 3
 addUserKnob {7 triminner l "Erode Center" t "Erode away the lights from the center."}
 triminner 0.15
 addUserKnob {7 trimouter l "Feather Center" t "Feathers the Center Erode outwards."}
 trimouter 0.15
 addUserKnob {41 white l "Mask Gain" T Grade3.white}
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 grp_grade l Grade n 1}
 grp_grade 0
 addUserKnob {41 channels T Grade2.channels}
 addUserKnob {41 blackpoint T Grade2.blackpoint}
 addUserKnob {41 whitepoint T Grade2.whitepoint}
 addUserKnob {41 black l lift T Grade2.black}
 addUserKnob {41 white_1 l gain T Grade2.white}
 addUserKnob {41 multiply T Grade2.multiply}
 addUserKnob {41 add l offset T Grade2.add}
 addUserKnob {41 gamma T Grade2.gamma}
 addUserKnob {41 reverse T Grade2.reverse}
 addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade2.black_clamp}
 addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade2.white_clamp}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 "" l mask T ""}
 addUserKnob {41 maskChannelMask l "" -STARTLINE T Merge1.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge1.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
 addUserKnob {41 mix T Grade2.mix}
 addUserKnob {6 usealpha l "Mask in Alpha" +STARTLINE}
 usealpha true
 addUserKnob {6 create +INVISIBLE +STARTLINE}
 addUserKnob {20 info l Info}
 addUserKnob {26 infotext l "" +STARTLINE T "<font size=\"6\"><b>NormalLight</b></font><br>\n<i>v1.0.0</i> <br>\n<i>Pelle Nordentoft</i>\n\n<br><br><br>\n\nThis node allows you to grade parts of an\nimage<br>\nwhose \"normals\" are aimed towards a specified position.<br>\n\n<br><br><br>\n\nUses  <a href=\"http://www.nukepedia.com/toolsets/other/vectortools/\" style=\"color:gray;\">Luma_to_Normals</a> by Erwan Leroy."}
}
 Input {
  inputs 0
  name Inputsrc
  xpos 244
  ypos 170
 }
 Dot {
  name Dot6
  xpos 278
  ypos 223
 }
set Ne1826000 [stack 0]
 Dot {
  name Dot2
  xpos 594
  ypos 223
 }
set Ne1826400 [stack 0]
 Dot {
  name Dot3
  xpos 781
  ypos 223
 }
 Expression {
  expr0 0
  expr1 0
  expr2 0
  expr3 0
  name BLANK
  xpos 747
  ypos 260
 }
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+0.5)/height
  expr2 0
  expr3 0
  name STMAP
  xpos 747
  ypos 308
 }
 Expression {
  temp_name0 centerX
  temp_expr0 int(lightpos.x)/width
  temp_name1 centerY
  temp_expr1 int(lightpos.y)/height
  expr0 "r - centerX"
  expr1 "g - centerY"
  expr2 0
  expr3 0
  name DISTANCE
  xpos 747
  ypos 360
  addUserKnob {20 User}
  addUserKnob {12 lightpos l "Light Position"}
  lightpos {100 100}
 }
 Expression {
  expr2 "hypot(r, g)"
  expr3 "hypot(r, g)"
  name MAGNITUDE
  xpos 747
  ypos 412
  cached true
 }
 Expression {
  expr0 "r / b"
  expr1 "g / b"
  name NORMAL
  xpos 747
  ypos 464
 }
 Dot {
  name Dot1
  xpos 781
  ypos 511
 }
set Ne1944000 [stack 0]
 Expression {
  temp_name0 inner
  temp_expr0 parent.triminner/10
  temp_name1 outer
  temp_expr1 inner+parent.trimouter/10
  expr3 "smoothstep(inner, outer, a)"
  name Expression1
  xpos 747
  ypos 572
 }
 Dot {
  name Dot7
  xpos 781
  ypos 649
 }
push $Ne1944000
 Input {
  inputs 0
  name Inputnormals
  xpos 426
  ypos 319
  number 1
 }
 Dot {
  name Dot8
  xpos 460
  ypos 407
 }
push $Ne1826400
 Group {
  name Luma_to_Normals
  help "Performs a Sobel filter on the Luminance channel of an image to extract an approximation of a Normal map.\n\nFor a mathematical conversion of a displacement map to normals, do not use Details separation."
  xpos 560
  ypos 272
  addUserKnob {20 luma_to_normals l "Luma to Normals"}
  addUserKnob {26 div_pre l Pre-Process}
  addUserKnob {7 blur R 0 10}
  addUserKnob {7 gain}
  gain 1
  addUserKnob {26 div_details l "Details Separation"}
  addUserKnob {7 size t "Bigger sizes will separate high and low frequencies more." R 0 100}
  size {{parent.soften}}
  addUserKnob {7 details_weight t "How much the details affect the final output"}
  addUserKnob {26 div_out l Output}
  addUserKnob {4 value_check t "Some big values might create impossible normals. Use gain and Blur to ensure there are no error values.\n\nValues in red on error check represent a vertical normal (parallel to the camera) which would not normally be visible to the camera." M {Result "Check Errors" "" "" "" ""}}
  addUserKnob {6 normalize t "Switch between -1 to 1 range or 0 to 1 range" +STARTLINE}
  addUserKnob {6 legalize t "Normal maps should generally be represented with a vector magnitude of 1.\nTurning on legalization will scale all vectors to ensure they all have a magnitude of 1.\n\nYou may want to disable it for more interesting effects when generating normals for a fake refraction through an iDistort, where having vectors of different length adds depth." -STARTLINE}
  legalize true
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" t www.erwanleroy.com +STARTLINE T "v1.1 - Part of VectorTools by Erwan Leroy"}
 }
  Input {
   inputs 0
   name Input1
   xpos -576
   ypos -296
  }
  Saturation {
   saturation 0
   name Saturation1
   xpos -576
   ypos -243
  }
  Blur {
   size {{parent.blur}}
   name Blur2
   xpos -576
   ypos -196
  }
  Multiply {
   value {{0.5*parent.gain}}
   name Multiply1
   xpos -576
   ypos -134
  }
set Ne2056000 [stack 0]
  Blur {
   size {{parent.size}}
   name Blur1
   xpos -576
   ypos -83
  }
  Dot {
   name Dot2
   xpos -542
   ypos -45
  }
set Ne2056800 [stack 0]
  Matrix {
   matrix {
       {2 0 -2}
       {1 0 -1}
       {2 0 -2}
     }
   name Matrix1
   xpos -576
   ypos 38
  }
push $Ne2056800
  Dot {
   name Dot3
   xpos -432
   ypos -45
  }
set Ne2057000 [stack 0]
  Matrix {
   matrix {
       {-2 -1 -2}
       {0 0 0}
       {2 1 2}
     }
   name Matrix2
   xpos -466
   ypos 37
  }
  Dot {
   name Dot4
   xpos -432
   ypos 92
  }
  ShuffleCopy {
   inputs 2
   red red
   blue black
   alpha black
   name ShuffleCopy1
   xpos -575
   ypos 88
  }
  Multiply {
   value {{(1-parent.details_weight)*(parent.size/10+1)}}
   name Multiply2
   xpos -577
   ypos 128
  }
push $Ne2057000
push $Ne2056000
  Dot {
   name Dot1
   xpos -319
   ypos -124
  }
  Merge2 {
   inputs 2
   operation from
   name Merge1
   xpos -353
   ypos -49
  }
  Dot {
   name Dot5
   xpos -319
   ypos -23
  }
set Ne2088c00 [stack 0]
  Matrix {
   matrix {
       {2 0 -2}
       {1 0 -1}
       {2 0 -2}
     }
   name Matrix3
   xpos -353
   ypos 31
  }
push $Ne2088c00
  Dot {
   name Dot6
   xpos -181
   ypos -23
  }
  Matrix {
   matrix {
       {-2 -1 -2}
       {0 0 0}
       {2 1 2}
     }
   name Matrix4
   xpos -215
   ypos 33
  }
  Dot {
   name Dot7
   xpos -181
   ypos 87
  }
  ShuffleCopy {
   inputs 2
   red red
   blue black
   alpha black
   name ShuffleCopy2
   xpos -353
   ypos 83
  }
  Multiply {
   value {{parent.details_weight}}
   name Multiply3
   xpos -353
   ypos 119
  }
  Dot {
   name Dot8
   xpos -319
   ypos 188
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge2
   xpos -577
   ypos 184
  }
  Expression {
   temp_name0 mag
   temp_expr0 sqrt(pow(r,2)+pow(g,2)+pow(b,2))
   expr0 mag>1?r/mag:r
   expr1 mag>1?g/mag:g
   name Expression3
   xpos -577
   ypos 222
   disable {{1-parent.legalize}}
  }
set Ne1683000 [stack 0]
  Expression {
   temp_name0 facing
   temp_expr0 sqrt(-pow(r,2)-pow(g,2)+1)
   expr2 isnan(facing)?0:facing
   name Expression2
   xpos -577
   ypos 247
  }
set Ne1683400 [stack 0]
  Viewer {
   frame_range 1-87
   fps 12
   name Viewer1
   xpos -178
   ypos 308
  }
push $Ne1683000
  Dot {
   name Dot9
   xpos -400
   ypos 225
  }
  Remove {
   operation keep
   channels rgb
   name Remove2
   xpos -434
   ypos 271
  }
  Expression {
   temp_name0 facing
   temp_expr0 sqrt(-pow(r,2)-pow(g,2)+1)
   expr0 isnan(facing)?1:0
   expr1 0
   name Expression1
   xpos -434
   ypos 314
  }
  Dot {
   name Dot10
   xpos -400
   ypos 378
  }
push $Ne1683400
  Remove {
   operation keep
   channels rgb
   name Remove1
   xpos -577
   ypos 273
  }
  Grade {
   white 0.5
   add 0.5
   name Grade1
   xpos -577
   ypos 313
   disable {{1-parent.normalize}}
  }
  Switch {
   inputs 2
   which {{parent.value_check}}
   name Switch1
   xpos -576
   ypos 374
  }
  Output {
   name Output1
   xpos -576
   ypos 426
  }
 end_group
 Expression {
  expr0 r*-1
  expr1 g*-1
  name INVERT_DIR
  xpos 560
  ypos 318
 }
 Switch {
  inputs 2
  which {{parent.customnormals}}
  name Switch1
  label "Using: \[value which]"
  xpos 560
  ypos 398
 }
 Group {
  inputs 2
  name DotProductVector2_
  help "Calculates the dot product of 2 Vector2 inputs."
  xpos 560
  ypos 508
  addUserKnob {20 main_tab l "Dot Product Vector2"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorA
   xpos 457
   ypos -6
   number 1
  }
  Shuffle {
   name vector_layer1
   xpos 457
   ypos 103
  }
  Remove {
   operation keep
   channels rgba
   name Remove2
   xpos 457
   ypos 129
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 491
   ypos 210
  }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set Ne13edc00 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  MergeExpression {
   inputs 2
   channel0 rgb
   expr0 Br*Ar+Bg*Ag
   channel1 none
   channel2 none
   channel3 none
   name MergeExpression1
   xpos 140
   ypos 206
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $Ne13edc00
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.vector_layer.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Grade {
  name Grade3
  xpos 560
  ypos 569
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos 560
  ypos 640
 }
 Premult {
  name Premult1
  xpos 560
  ypos 699
 }
 Dot {
  name Dot4
  xpos 594
  ypos 835
 }
set Ne124c400 [stack 0]
 Dot {
  name Dot5
  xpos 594
  ypos 1005
 }
 Input {
  inputs 0
  name Inputmask
  xpos 131
  ypos 844
  number 2
 }
 Dot {
  name Dot12
  xpos 165
  ypos 903
 }
push $Ne124c400
push $Ne1826000
 Dot {
  name Dot9
  xpos 278
  ypos 766
 }
set Ne124d400 [stack 0]
 Dot {
  name Dot10
  xpos 398
  ypos 766
 }
 Grade {
  inputs 1+1
  white {20 1 1 1}
  white_panelDropped true
  maskChannelMask rgba.red
  name Grade2
  xpos 364
  ypos 832
 }
 Dot {
  name Dot11
  xpos 398
  ypos 903
 }
push $Ne124d400
 Merge2 {
  inputs 2+1
  operation copy
  maskChannelMask none
  name Merge1
  xpos 244
  ypos 900
 }
set Ne1270400 [stack 0]
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  name Copy1
  xpos 244
  ypos 996
  disable {{!parent.usealpha}}
 }
 Output {
  name Output1
  xpos 244
  ypos 1096
 }
push $Ne1270400
 Viewer {
  frame_range 1-87
  fps 12
  name Viewer1
  xpos 895
  ypos 719
 }
end_group
